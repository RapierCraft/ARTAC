version: '3.8'

services:
  # PostgreSQL with pgvector for RAG embeddings
  postgres:
    image: pgvector/pgvector:pg15
    container_name: raisc-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: raisc_user
      POSTGRES_PASSWORD: raisc_password
      POSTGRES_DB: raisc_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - raisc-network

  # Redis for caching and real-time data
  redis:
    image: redis:7-alpine
    container_name: raisc-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - raisc-network

  # Backend API service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: raisc-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://raisc_user:raisc_password@postgres:5432/raisc_db
      - REDIS_URL=redis://redis:6379
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - raisc-network

  # Frontend dashboard
  frontend:
    build:
      context: ./frontend  
      dockerfile: Dockerfile
    container_name: raisc-frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - raisc-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: raisc-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - raisc-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: raisc-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - raisc-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  raisc-network:
    driver: bridge